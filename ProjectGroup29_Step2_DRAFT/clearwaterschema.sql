-- MySQL Script generated by MySQL Workbench
-- Sun Jul 10 11:38:32 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema cs340_diagours
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema cs340_diagours
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cs340_diagours` DEFAULT CHARACTER SET utf8 ;
USE `cs340_diagours` ;

-- -----------------------------------------------------
-- Table `cs340_diagours`.`Employees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cs340_diagours`.`Employees` (
  `employeeID` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `role` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `phoneNumber` INT NULL,
  PRIMARY KEY (`employeeID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cs340_diagours`.`Concerts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cs340_diagours`.`Concerts` (
  `concertID` INT NOT NULL AUTO_INCREMENT,
  `concertDate` DATE NULL,
  `numberOfTickets` INT NULL,
  PRIMARY KEY (`concertID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cs340_diagours`.`Customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cs340_diagours`.`Customers` (
  `customerID` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(145) NULL,
  `email` VARCHAR(45) NULL,
  `phoneNumber` INT NULL,
  `address` VARCHAR(145) NULL,
  `Concerts_concertID` INT NOT NULL,
  PRIMARY KEY (`customerID`, `Concerts_concertID`),
  INDEX `fk_Customers_Concerts1_idx` (`Concerts_concertID` ASC) VISIBLE,
  CONSTRAINT `fk_Customers_Concerts1`
    FOREIGN KEY (`Concerts_concertID`)
    REFERENCES `cs340_diagours`.`Concerts` (`concertID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cs340_diagours`.`Artists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cs340_diagours`.`Artists` (
  `name` VARCHAR(145) NOT NULL,
  `artistID` INT NOT NULL AUTO_INCREMENT,
  `phoneNumber` INT NULL,
  PRIMARY KEY (`artistID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cs340_diagours`.`Concerts_has_Customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cs340_diagours`.`Concerts_has_Customers` (
  `Concerts_concertID` INT NOT NULL,
  `Customers_customerID` INT NOT NULL,
  `Concerts_has_Customers_Concerts_concertID` INT NOT NULL,
  `Concerts_has_Customers_Customers_customerID` INT NOT NULL,
  PRIMARY KEY (`Concerts_concertID`, `Customers_customerID`, `Concerts_has_Customers_Concerts_concertID`, `Concerts_has_Customers_Customers_customerID`),
  INDEX `fk_Concerts_has_Customers_Customers1_idx` (`Customers_customerID` ASC) VISIBLE,
  INDEX `fk_Concerts_has_Customers_Concerts_idx` (`Concerts_concertID` ASC) VISIBLE,
  INDEX `fk_Concerts_has_Customers_Concerts_has_Customers1_idx` (`Concerts_has_Customers_Concerts_concertID` ASC, `Concerts_has_Customers_Customers_customerID` ASC) VISIBLE,
  CONSTRAINT `fk_Concerts_has_Customers_Concerts`
    FOREIGN KEY (`Concerts_concertID`)
    REFERENCES `cs340_diagours`.`Concerts` (`concertID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Concerts_has_Customers_Customers1`
    FOREIGN KEY (`Customers_customerID`)
    REFERENCES `cs340_diagours`.`Customers` (`customerID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Concerts_has_Customers_Concerts_has_Customers1`
    FOREIGN KEY (`Concerts_has_Customers_Concerts_concertID` , `Concerts_has_Customers_Customers_customerID`)
    REFERENCES `cs340_diagours`.`Concerts_has_Customers` (`Concerts_concertID` , `Customers_customerID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cs340_diagours`.`Customers_has_Concerts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cs340_diagours`.`Customers_has_Concerts` (
  `Customers_customerID` INT NOT NULL,
  `Concerts_concertID` INT NOT NULL,
  PRIMARY KEY (`Customers_customerID`, `Concerts_concertID`),
  INDEX `fk_Customers_has_Concerts_Concerts1_idx` (`Concerts_concertID` ASC) VISIBLE,
  INDEX `fk_Customers_has_Concerts_Customers1_idx` (`Customers_customerID` ASC) VISIBLE,
  CONSTRAINT `fk_Customers_has_Concerts_Customers1`
    FOREIGN KEY (`Customers_customerID`)
    REFERENCES `cs340_diagours`.`Customers` (`customerID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Customers_has_Concerts_Concerts1`
    FOREIGN KEY (`Concerts_concertID`)
    REFERENCES `cs340_diagours`.`Concerts` (`concertID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cs340_diagours`.`ticketSalesPerArtist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cs340_diagours`.`ticketSalesPerArtist` (
  `numberOfTicketsSold` INT NULL)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cs340_diagours`.`Concerts_has_Concerts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cs340_diagours`.`Concerts_has_Concerts` (
  `Concerts_concertID` INT NOT NULL,
  `Concerts_concertID1` INT NOT NULL,
  PRIMARY KEY (`Concerts_concertID`, `Concerts_concertID1`),
  INDEX `fk_Concerts_has_Concerts_Concerts2_idx` (`Concerts_concertID1` ASC) VISIBLE,
  INDEX `fk_Concerts_has_Concerts_Concerts1_idx` (`Concerts_concertID` ASC) VISIBLE,
  CONSTRAINT `fk_Concerts_has_Concerts_Concerts1`
    FOREIGN KEY (`Concerts_concertID`)
    REFERENCES `cs340_diagours`.`Concerts` (`concertID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Concerts_has_Concerts_Concerts2`
    FOREIGN KEY (`Concerts_concertID1`)
    REFERENCES `cs340_diagours`.`Concerts` (`concertID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cs340_diagours`.`Concerts_has_Artists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cs340_diagours`.`Concerts_has_Artists` (
  `Concerts_concertID` INT NOT NULL,
  `Artists_artistID` INT NOT NULL,
  PRIMARY KEY (`Concerts_concertID`, `Artists_artistID`),
  INDEX `fk_Concerts_has_Artists_Artists1_idx` (`Artists_artistID` ASC) VISIBLE,
  INDEX `fk_Concerts_has_Artists_Concerts1_idx` (`Concerts_concertID` ASC) VISIBLE,
  CONSTRAINT `fk_Concerts_has_Artists_Concerts1`
    FOREIGN KEY (`Concerts_concertID`)
    REFERENCES `cs340_diagours`.`Concerts` (`concertID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Concerts_has_Artists_Artists1`
    FOREIGN KEY (`Artists_artistID`)
    REFERENCES `cs340_diagours`.`Artists` (`artistID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cs340_diagours`.`Concerts_has_Employees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cs340_diagours`.`Concerts_has_Employees` (
  `Concerts_concertID` INT NOT NULL,
  `Employees_employeeID` INT NOT NULL,
  PRIMARY KEY (`Concerts_concertID`, `Employees_employeeID`),
  INDEX `fk_Concerts_has_Employees_Employees1_idx` (`Employees_employeeID` ASC) VISIBLE,
  INDEX `fk_Concerts_has_Employees_Concerts1_idx` (`Concerts_concertID` ASC) VISIBLE,
  CONSTRAINT `fk_Concerts_has_Employees_Concerts1`
    FOREIGN KEY (`Concerts_concertID`)
    REFERENCES `cs340_diagours`.`Concerts` (`concertID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Concerts_has_Employees_Employees1`
    FOREIGN KEY (`Employees_employeeID`)
    REFERENCES `cs340_diagours`.`Employees` (`employeeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cs340_diagours`.`Tickets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cs340_diagours`.`Tickets` (
  `ticketID` INT NOT NULL AUTO_INCREMENT,
  `Concerts_concertID` INT NOT NULL,
  `Customers_customerID` INT NOT NULL,
  `Customers_Concerts_concertID` INT NOT NULL,
  PRIMARY KEY (`ticketID`, `Concerts_concertID`, `Customers_customerID`, `Customers_Concerts_concertID`),
  INDEX `fk_Tickets_Concerts1_idx` (`Concerts_concertID` ASC) VISIBLE,
  INDEX `fk_Tickets_Customers1_idx` (`Customers_customerID` ASC, `Customers_Concerts_concertID` ASC) VISIBLE,
  CONSTRAINT `fk_Tickets_Concerts1`
    FOREIGN KEY (`Concerts_concertID`)
    REFERENCES `cs340_diagours`.`Concerts` (`concertID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Tickets_Customers1`
    FOREIGN KEY (`Customers_customerID`)
    REFERENCES `cs340_diagours`.`Customers` (`customerID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
